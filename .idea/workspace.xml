<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="01f20475-8ff3-4e08-bfc8-8b9a2827d6e6" name="Changes" comment="🚀 Expected Results&#10;&#10;  Your backend should now:&#10;  - ✅ Start successfully on Render (no more SECRET_KEY missing error)&#10;  - ✅ Handle missing environment variables gracefully during startup&#10;  - ✅ Initialize database only when actually needed (during first API call)&#10;  - ✅ Work with your existing environment variables in Render">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;teniee&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/teniee/mita_project.git&quot;,
    &quot;accountId&quot;: &quot;175b165d-c20f-4c14-8c00-5f092fcc8ee3&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2zKj5SDY49jfWJ0oOrXTB4GRApY" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/mikhail/StudioProjects/mita_project/.claude/agents"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.claude/agents" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="01f20475-8ff3-4e08-bfc8-8b9a2827d6e6" name="Changes" comment="" />
      <created>1751486482842</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751486482842</updated>
    </task>
    <task id="LOCAL-00001" summary="fixed register problem">
      <option name="closed" value="true" />
      <created>1753623224332</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1753623224332</updated>
    </task>
    <task id="LOCAL-00002" summary="fixed register problem 2">
      <option name="closed" value="true" />
      <created>1753636290206</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1753636290206</updated>
    </task>
    <task id="LOCAL-00003" summary="fixed register problem 2">
      <option name="closed" value="true" />
      <created>1753637108015</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1753637108015</updated>
    </task>
    <task id="LOCAL-00004" summary="fixed register problem 2">
      <option name="closed" value="true" />
      <created>1753640253563</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1753640253563</updated>
    </task>
    <task id="LOCAL-00005" summary="fixed register problem 2">
      <option name="closed" value="true" />
      <created>1753794860372</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1753794860372</updated>
    </task>
    <task id="LOCAL-00006" summary=" ✅ Completed Improvements:&#10;&#10;  1. 🔒 Security Enhancement: Eliminated hardcoded secrets, implemented secure environment variable configuration&#10;  2. ⚡ Architecture Modernization: Fixed async/sync inconsistencies, implemented proper async database patterns&#10;  3. 📊 Code Quality: Replaced 79+ print statements with structured logging system across Flutter and backend&#10;  4. 🚀 Performance Upgrade: Upgraded SQLAlchemy to 2.x with modern async patterns and connection pooling&#10;  5. 🏗️ Repository Pattern: Implemented comprehensive data access layer with Base, User, Transaction, Expense, and Goal repositories&#10;  6. 🎯 Database Optimization: Created indexing strategy with 25+ critical indexes for optimal query performance&#10;  7. 🛡️ Resilience Engineering: Built circuit breaker system with retry logic, fallback responses, and health monitoring&#10;  8. 🧹 Code Organization: Consolidated duplicate models, eliminated legacy code, improved project structure&#10;  9. 🧪 Test Coverage: Added 4,700+ lines of comprehensive tests covering repositories, circuit breakers, and resilient services">
      <option name="closed" value="true" />
      <created>1753906175422</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1753906175422</updated>
    </task>
    <task id="LOCAL-00007" summary=" ✅ Completed Improvements:&#10;&#10;  1. 🔒 Security Enhancement: Eliminated hardcoded secrets, implemented secure environment variable configuration&#10;  2. ⚡ Architecture Modernization: Fixed async/sync inconsistencies, implemented proper async database patterns&#10;  3. 📊 Code Quality: Replaced 79+ print statements with structured logging system across Flutter and backend&#10;  4. 🚀 Performance Upgrade: Upgraded SQLAlchemy to 2.x with modern async patterns and connection pooling&#10;  5. 🏗️ Repository Pattern: Implemented comprehensive data access layer with Base, User, Transaction, Expense, and Goal repositories&#10;  6. 🎯 Database Optimization: Created indexing strategy with 25+ critical indexes for optimal query performance&#10;  7. 🛡️ Resilience Engineering: Built circuit breaker system with retry logic, fallback responses, and health monitoring&#10;  8. 🧹 Code Organization: Consolidated duplicate models, eliminated legacy code, improved project structure&#10;  9. 🧪 Test Coverage: Added 4,700+ lines of comprehensive tests covering repositories, circuit breakers, and resilient services">
      <option name="closed" value="true" />
      <created>1753979252907</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1753979252907</updated>
    </task>
    <task id="LOCAL-00008" summary=" ✅ Completed Improvements:&#10;&#10;  1. 🔒 Security Enhancement: Eliminated hardcoded secrets, implemented secure environment variable configuration&#10;  2. ⚡ Architecture Modernization: Fixed async/sync inconsistencies, implemented proper async database patterns&#10;  3. 📊 Code Quality: Replaced 79+ print statements with structured logging system across Flutter and backend&#10;  4. 🚀 Performance Upgrade: Upgraded SQLAlchemy to 2.x with modern async patterns and connection pooling&#10;  5. 🏗️ Repository Pattern: Implemented comprehensive data access layer with Base, User, Transaction, Expense, and Goal repositories&#10;  6. 🎯 Database Optimization: Created indexing strategy with 25+ critical indexes for optimal query performance&#10;  7. 🛡️ Resilience Engineering: Built circuit breaker system with retry logic, fallback responses, and health monitoring&#10;  8. 🧹 Code Organization: Consolidated duplicate models, eliminated legacy code, improved project structure&#10;  9. 🧪 Test Coverage: Added 4,700+ lines of comprehensive tests covering repositories, circuit breakers, and resilient services">
      <option name="closed" value="true" />
      <created>1753980542622</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1753980542622</updated>
    </task>
    <task id="LOCAL-00009" summary=" With these fixes, you should now see:&#10;&#10;  1. ✅ Dashboard loads properly - No more &quot;Unable to load dashboard data&quot; error&#10;  2. ✅ AI Insights work - No more 404 DioException errors in AI Overview tab&#10;  3. ✅ Calendar should function - Error boundary crashes likely resolved">
      <option name="closed" value="true" />
      <created>1753982190377</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1753982190377</updated>
    </task>
    <task id="LOCAL-00010" summary="🚀 Expected Results&#10;&#10;  Your backend should now:&#10;  - ✅ Start successfully on Render (no more SECRET_KEY missing error)&#10;  - ✅ Handle missing environment variables gracefully during startup&#10;  - ✅ Initialize database only when actually needed (during first API call)&#10;  - ✅ Work with your existing environment variables in Render">
      <option name="closed" value="true" />
      <created>1753982941731</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1753982941731</updated>
    </task>
    <task id="LOCAL-00011" summary="🚀 Expected Results&#10;&#10;  Your backend should now:&#10;  - ✅ Start successfully on Render (no more SECRET_KEY missing error)&#10;  - ✅ Handle missing environment variables gracefully during startup&#10;  - ✅ Initialize database only when actually needed (during first API call)&#10;  - ✅ Work with your existing environment variables in Render">
      <option name="closed" value="true" />
      <created>1753983453098</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1753983453098</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="fixed register problem" />
    <MESSAGE value="fixed register problem 2" />
    <MESSAGE value=" ✅ Completed Improvements:&#10;&#10;  1.  Security Enhancement: Eliminated hardcoded secrets, implemented secure environment variable configuration&#10;  2. ⚡ Architecture Modernization: Fixed async/sync inconsistencies, implemented proper async database patterns&#10;  3.  Code Quality: Replaced 79+ print statements with structured logging system across Flutter and backend&#10;  4.  Performance Upgrade: Upgraded SQLAlchemy to 2.x with modern async patterns and connection pooling&#10;  5. ️ Repository Pattern: Implemented comprehensive data access layer with Base, User, Transaction, Expense, and Goal repositories&#10;  6.  Database Optimization: Created indexing strategy with 25+ critical indexes for optimal query performance&#10;  7. ️ Resilience Engineering: Built circuit breaker system with retry logic, fallback responses, and health monitoring&#10;  8.  Code Organization: Consolidated duplicate models, eliminated legacy code, improved project structure&#10;  9.  Test Coverage: Added 4,700+ lines of comprehensive tests covering repositories, circuit breakers, and resilient services" />
    <MESSAGE value=" With these fixes, you should now see:&#10;&#10;  1. ✅ Dashboard loads properly - No more &quot;Unable to load dashboard data&quot; error&#10;  2. ✅ AI Insights work - No more 404 DioException errors in AI Overview tab&#10;  3. ✅ Calendar should function - Error boundary crashes likely resolved" />
    <MESSAGE value=" Expected Results&#10;&#10;  Your backend should now:&#10;  - ✅ Start successfully on Render (no more SECRET_KEY missing error)&#10;  - ✅ Handle missing environment variables gracefully during startup&#10;  - ✅ Initialize database only when actually needed (during first API call)&#10;  - ✅ Work with your existing environment variables in Render" />
    <option name="LAST_COMMIT_MESSAGE" value=" Expected Results&#10;&#10;  Your backend should now:&#10;  - ✅ Start successfully on Render (no more SECRET_KEY missing error)&#10;  - ✅ Handle missing environment variables gracefully during startup&#10;  - ✅ Initialize database only when actually needed (during first API call)&#10;  - ✅ Work with your existing environment variables in Render" />
  </component>
</project>