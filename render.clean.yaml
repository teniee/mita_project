services:
  # MITA Production Backend Service - Clean Configuration
  - type: web
    name: mita-production
    env: python
    plan: starter
    buildCommand: pip install --upgrade pip && pip install -r requirements.txt
    startCommand: python start_optimized.py
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      # Environment identification
      - key: ENVIRONMENT
        value: production
      
      # Server configuration
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        fromService:
          type: web
          name: mita-production
          property: port
      - key: WEB_CONCURRENCY
        value: 1
      
      # Python configuration
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: PYTHONUNBUFFERED
        value: 1
      - key: PYTHONDONTWRITEBYTECODE
        value: 1
      
      # Application settings
      - key: LOG_LEVEL
        value: INFO
      - key: DEBUG
        value: false
      
      # CORS configuration
      - key: ALLOWED_ORIGINS
        value: "https://app.mita.finance,https://admin.mita.finance"
      
      # Redis configuration (external service)
      - key: REDIS_MAX_CONNECTIONS
        value: 20
      - key: REDIS_TIMEOUT
        value: 30
      - key: REDIS_RETRY_ON_TIMEOUT
        value: true
      
      # Feature flags - Production
      - key: FEATURE_FLAGS_ADMIN_ENDPOINTS
        value: true
      - key: FEATURE_FLAGS_ADVANCED_OCR
        value: true
      - key: FEATURE_FLAGS_AI_BUDGET_ANALYSIS
        value: true
      - key: FEATURE_FLAGS_CIRCUIT_BREAKER
        value: true
      - key: FEATURE_FLAGS_ENHANCED_RATE_LIMITING
        value: true
      - key: FEATURE_FLAGS_JWT_ROTATION
        value: true
      - key: FEATURE_FLAGS_PUSH_NOTIFICATIONS
        value: true
      - key: FEATURE_FLAGS_DETAILED_ANALYTICS
        value: true
      - key: FEATURE_FLAGS_DEBUG_LOGGING
        value: false
      
      # Task queue configuration
      - key: WORKER_MAX_JOBS
        value: 100
      - key: WORKER_JOB_TIMEOUT
        value: 600
      - key: ENABLE_WORKER_AUTOSCALING
        value: true
      - key: ENABLE_TASK_METRICS
        value: true
      
      # CRITICAL SECRETS - These MUST be set in Render Dashboard
      # Do NOT include actual secret values in this file
      - key: SECRET_KEY
        sync: false  # Set manually in Render Dashboard
      - key: JWT_SECRET
        sync: false  # Set manually in Render Dashboard
      - key: JWT_PREVIOUS_SECRET
        sync: false  # Set manually in Render Dashboard
      - key: DATABASE_URL
        sync: false  # Set manually in Render Dashboard (linked database)
      - key: OPENAI_API_KEY
        sync: false  # Set manually in Render Dashboard
      - key: REDIS_URL
        sync: false  # Set manually in Render Dashboard
      - key: REDIS_PASSWORD
        sync: false  # Set manually in Render Dashboard
      - key: SENTRY_DSN
        sync: false  # Set manually in Render Dashboard
      - key: FIREBASE_JSON
        sync: false  # Set manually in Render Dashboard
      - key: APPSTORE_SHARED_SECRET
        sync: false  # Set manually in Render Dashboard
      - key: SMTP_PASSWORD
        sync: false  # Set manually in Render Dashboard
      - key: AWS_ACCESS_KEY_ID
        sync: false  # Set manually in Render Dashboard
      - key: AWS_SECRET_ACCESS_KEY
        sync: false  # Set manually in Render Dashboard
      - key: GRAFANA_PASSWORD
        sync: false  # Set manually in Render Dashboard
      
      # Non-secret configuration
      - key: SMTP_HOST
        value: smtp.sendgrid.net
      - key: SMTP_PORT
        value: 587
      - key: SMTP_USERNAME
        value: apikey
      - key: SMTP_FROM
        value: noreply@mita.finance
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: BACKUP_BUCKET
        value: mita-production-backups
      - key: OPENAI_MODEL
        value: gpt-4o-mini
      - key: ALGORITHM
        value: HS256
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30

databases:
  # PostgreSQL Database for Production
  - name: mita-production-db
    plan: starter
    databaseName: mita_production
    user: mita_user
    region: oregon

# External Redis Configuration
# Note: Add external Redis service (Upstash, Redis Labs, etc.) 
# and set REDIS_URL in environment variables manually