services:
  # MITA Production Backend Service - Production Ready Configuration
  - type: web
    name: mita-production
    env: python
    plan: standard  # Upgraded for production workload
    region: oregon
    branch: main
    buildCommand: |
      pip install --upgrade pip setuptools wheel &&
      pip install -r requirements.txt &&
      echo "Build completed successfully"
    startCommand: python start_optimized.py
    healthCheckPath: /health
    autoDeploy: true
    
    # Production Environment Variables
    envVars:
      # Core Application Settings
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: LOG_LEVEL
        value: INFO
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        fromService:
          type: web
          name: mita-production
          property: port
      
      # Python Runtime Configuration
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: PYTHONUNBUFFERED
        value: 1
      - key: PYTHONDONTWRITEBYTECODE
        value: 1
      - key: PYTHONHASHSEED
        value: random
      
      # Production Worker Configuration
      - key: WEB_CONCURRENCY
        value: 4
      - key: WORKER_TIMEOUT
        value: 30
      - key: KEEPALIVE_TIMEOUT
        value: 2
      - key: MAX_REQUESTS
        value: 1000
      - key: MAX_REQUESTS_JITTER
        value: 50
      
      # CRITICAL SECRETS - MUST BE SET MANUALLY IN RENDER DASHBOARD
      - key: SECRET_KEY
        sync: false  # Set to: _2xehg0QmsjRElHCg7hRwAhEO9eYKeZ9EDDSFx9CgoI
      - key: JWT_SECRET
        sync: false  # Set to: LZaS6tha51MBwgBoHW6GbK4VbbboeQO12LsmEDdKp3s
      - key: JWT_PREVIOUS_SECRET
        sync: false  # Set to: b0wJB1GuD13OBI3SEfDhtFBWA8KqM3ynI6Ce83xLTHs
      - key: DATABASE_URL
        fromDatabase:
          name: mita-production-db
          property: connectionString
      
      # External Service API Keys - SET THESE IN RENDER DASHBOARD
      - key: OPENAI_API_KEY
        sync: false  # REQUIRED: Get from OpenAI dashboard
      - key: SENTRY_DSN
        sync: false  # REQUIRED: Get from Sentry project settings
      - key: FIREBASE_JSON
        sync: false  # REQUIRED: Firebase service account JSON
      - key: APPSTORE_SHARED_SECRET
        sync: false  # REQUIRED: Apple App Store shared secret
      
      # Email Configuration - SET IN RENDER DASHBOARD
      - key: SMTP_PASSWORD
        sync: false  # REQUIRED: SendGrid API key
      - key: SMTP_HOST
        value: smtp.sendgrid.net
      - key: SMTP_PORT
        value: 587
      - key: SMTP_USERNAME
        value: apikey
      - key: SMTP_FROM
        value: noreply@mita.finance
      
      # Redis Configuration - Upstash (Primary)
      - key: UPSTASH_REDIS_URL
        sync: false  # REQUIRED: Get from Upstash dashboard
      - key: UPSTASH_REDIS_REST_URL
        sync: false  # REQUIRED: Get from Upstash dashboard
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false  # REQUIRED: Get from Upstash dashboard
      
      # Redis Connection Settings
      - key: REDIS_MAX_CONNECTIONS
        value: 20
      - key: REDIS_TIMEOUT
        value: 30
      - key: REDIS_RETRY_ON_TIMEOUT
        value: true
      
      # Security Configuration
      - key: ALLOWED_ORIGINS
        value: https://app.mita.finance,https://admin.mita.finance,https://mita.finance
      - key: ALGORITHM
        value: HS256
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30
      
      # Feature Flags - Production Enabled
      - key: FEATURE_FLAGS_ADMIN_ENDPOINTS
        value: true
      - key: FEATURE_FLAGS_ADVANCED_OCR
        value: true
      - key: FEATURE_FLAGS_AI_BUDGET_ANALYSIS
        value: true
      - key: FEATURE_FLAGS_CIRCUIT_BREAKER
        value: true
      - key: FEATURE_FLAGS_ENHANCED_RATE_LIMITING
        value: true
      - key: FEATURE_FLAGS_JWT_ROTATION
        value: true
      - key: FEATURE_FLAGS_PUSH_NOTIFICATIONS
        value: true
      - key: FEATURE_FLAGS_DETAILED_ANALYTICS
        value: true
      - key: FEATURE_FLAGS_DEBUG_LOGGING
        value: false
      - key: FEATURE_FLAGS_NEW_BUDGET_ENGINE_ROLLOUT
        value: 100
      
      # Database Connection Pool Settings
      - key: DB_POOL_SIZE
        value: 20
      - key: DB_MAX_OVERFLOW
        value: 30
      - key: DB_POOL_TIMEOUT
        value: 30
      - key: DB_POOL_RECYCLE
        value: 3600
      - key: DB_POOL_PRE_PING
        value: true
      
      # Rate Limiting Configuration
      - key: RATE_LIMIT_ENABLED
        value: true
      - key: DEFAULT_RATE_LIMIT
        value: 100/minute
      - key: AUTH_RATE_LIMIT
        value: 20/minute
      - key: API_RATE_LIMIT
        value: 1000/minute
      
      # Monitoring & Health Checks
      - key: HEALTH_CHECK_ENABLED
        value: true
      - key: HEALTH_CHECK_PATH
        value: /health
      - key: HEALTH_CHECK_TIMEOUT
        value: 10
      
      # Production Security Compliance
      - key: PCI_DSS_COMPLIANT
        value: true
      - key: ENCRYPTION_AT_REST
        value: true
      - key: ENCRYPTION_IN_TRANSIT
        value: true
      - key: AUDIT_LOGGING_ENABLED
        value: true
      - key: SESSION_SECURE
        value: true
      - key: SECURE_COOKIES
        value: true
      
      # Performance Monitoring
      - key: SENTRY_TRACES_SAMPLE_RATE
        value: 0.1
      - key: SENTRY_PROFILES_SAMPLE_RATE
        value: 0.1
      
      # Backup and Storage (Optional - for S3 integration)
      - key: AWS_ACCESS_KEY_ID
        sync: false  # Optional: For S3 backups
      - key: AWS_SECRET_ACCESS_KEY
        sync: false  # Optional: For S3 backups
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: AWS_S3_BUCKET
        value: mita-production-storage
      - key: BACKUP_BUCKET
        value: mita-production-backups

databases:
  # PostgreSQL Database for Production
  - name: mita-production-db
    plan: standard  # Upgraded for production
    databaseName: mita_production
    user: mita_user
    region: oregon

# Production Deployment Notes:
# 1. Set all sync: false environment variables manually in Render dashboard
# 2. Use the generated secrets provided in .env.production
# 3. Configure Upstash Redis for high availability
# 4. Set up external monitoring (Sentry, etc.)
# 5. Verify health checks pass before going live
# 6. Enable auto-deploy only after initial manual verification